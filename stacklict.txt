//JOBAYER
//1731833

#include <iostream>
#include <string>
using namespace std;


class Staff{
    private:
    string name;
    int staffno;
    string faculty;
    int age;

    public:
    string getName() {
        return name;
    }

    void setName(string name) {
        this->name = name;
    }

    int getStaffno() {
        return staffno;
    }

    void setStaffno(int staffno) {
        this->staffno = staffno;
    }

    string getFaculty() {
        return faculty;
    }

    void setFaculty(string faculty) {
        this->faculty = faculty;
    }

    int getAge() {
        return age;
    }

    void setAge(int age) {
        this->age = age;
    }

    Staff(){}

    Staff(string name, int staffno, string faculty, int age) {
        this->name = name;
        this->staffno = staffno;
        this->faculty = faculty;
        this->age = age;
    }

};

struct node{
    Staff *data;
    node *previous;
};

class StaffList{
    private:

    static const int MAX = 10;
    int counter = -1;
    node *tos = new node;

    public:
    
    void push(Staff *s){
        if(counter == MAX)
            cout << "Stack is full!";
        else{
            node *newNode = new node;
            newNode -> data = s;
            newNode -> previous = tos;
            tos = newNode;
            counter++;
        }
    }

    Staff* pop(){
        if(counter == -1){
            cout << "Stack is empty!";
            return new Staff();
        }
        else{
            return tos -> data;
            counter--;
        }
    }

    Staff* top(){
        if(counter == -1){
            cout << "Stack is empty!";
            return new Staff();
        }
        else
            return tos -> data;
    }

    void display(){
        cout << "Name\t\tStaff No.\t Faculty\t Age\n" << endl;
        node *currNode = this -> tos;
        for(int i=counter; i>=0; i--){
            cout <<  currNode -> data -> getName() << "\t" << currNode -> data -> getStaffno()
            << "\t\t " <<  currNode -> data -> getFaculty() << "\t " <<  currNode -> data -> getAge() << endl;
            currNode = currNode -> previous;
        }
    }
};

int main(){
    StaffList staffs;
    staffs.push(new Staff("Zulfakar", 149, "Law     ", 50));
    
    staffs.display();

    return 0;
}